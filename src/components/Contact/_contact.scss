@import "./../../variables";

.contactContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  scroll-snap-align: start;
  flex-direction: column;
  height: 70vh;
  overflow-x: auto;
  text-align: center;

  & .inputTitle {
    font-size: $largerBodyFontSize;
    padding: 1rem;
    width: 100%;
    margin: 0;
  }

  & .spanToExpenedInput {
    font-size: $regularBodySizeFont;
    padding: 1rem;
    visibility: hidden;
  }

  & input {
    padding: 1rem;
    background-color: transparent;
    font-size: $regularBodySizeFont;
    outline: none;
    border: none;
    text-align: center;
    width: 100%;
    opacity: 0;
  }
}

.submitBtn {
  background-color: transparent;
  border-radius: $borderRedius;
  padding: 0.5rem 1rem;
  border: 1px solid white;
  margin-top: 2rem;
  transition: transform 0.3s;
  position: relative;
  overflow: hidden;
}

// .submitBtn::before {
//   content: "";
//   position: absolute;
//   top: 0;
//   left: 0;
//   width: 100%;
//   height: 100%;
//   background-color: white;
//   transform: translateX(-100%);
//   transition: all 1s;
//   z-index: -1;
// }

// .submitBtn:hover::before {
//   transform: translateX(0);
// }

[data-status="success"] {
  background-color: rgb(10, 236, 10);
}
[data-status="pending"] {
  animation: loadingLightPending infinite alternate 0.3s;
}
[data-status="error"] {
  background-color: red;
}

.submitBtn:hover {
  cursor: pointer;
  // color: rgb(5, 7, 57);
  transform: scale(1.3);
}
.inputAnimation {
  animation: inputIn ease-out 1s forwards;
}

@keyframes inputIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes loadingLightPending {
  from {
    background-color: transparent;
  }
  to {
    background-color: orange;
  }
}
// Tablet Screen
@media screen and (min-width: 850px) {
  .contactContainer {
    & .spanToExpenedInput,
    & input {
      font-size: 1.3rem;
    }
    & .inputTitle {
      font-size: 1.7rem;
    }
  }
}

// Desktop Screen
@media screen and (min-width: 1400px) {
  .contactContainer {
    & .spanToExpenedInput,
    & input {
      font-size: 2.8rem;
    }
    & .inputTitle {
      font-size: 3.2rem;
    }
  }
}
